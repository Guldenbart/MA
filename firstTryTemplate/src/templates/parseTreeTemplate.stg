
class(DSLname, startScopeName, startScopeMethods, scopes) ::= <<
package parseTreeGen;

import java.util.ArrayList;

import parseTree.ParseTree;


public class <DSLname>TreeBuilder {
	private ParseTree parseTree;

>>



method(interfaceNameUC, interfaceNameLC, interfaceChanges, returnType, name, argType, argName) ::= <<
public <getReturnType(returnType)> <name>(<getSignature(argType, argName)>) {
	AMethod m = new Method<name><if(argType)>Simple<else>Nested<endif>(argName);
	methodList_<interfaceName>.add(m);
	
	<if(interfaceChanges)>
	// new Lope
	Lope lope<interfaceName> = new Lope<interfaceName>(list_<interfaceName>);
	<interfaceName>TreeBuider.this.scopeList.add(lope<interfaceName>);
	
	<endif>
	return <DSLname>TreeBuilder.this.
	
}

>>

getReturnType(returnType) ::= "<if(returnType)><returnType><else>ParseTree<endif>"

getSignature(argType, argName) ::= "<if(argName)><getArgType(argType)> <argName><endif>"

getArgType(argType) ::= "<if(argType)><argType>Scope<else>ParseTree<endif>"


